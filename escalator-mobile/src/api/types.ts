/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/banco-horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        get: operations["api_banco_horas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        post: operations["api_banco_horas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/banco-horas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        get: operations["api_banco_horas_retrieve"];
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        put: operations["api_banco_horas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        delete: operations["api_banco_horas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        patch: operations["api_banco_horas_partial_update"];
        trace?: never;
    };
    "/api/banco-horas/processar_vencimentos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Processa registros vencidos do banco de horas */
        post: operations["api_banco_horas_processar_vencimentos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/banco-horas/saldos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna saldos de banco de horas de todos os funcionários */
        get: operations["api_banco_horas_saldos_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/banco-horas/vencimentos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna registros próximos ao vencimento */
        get: operations["api_banco_horas_vencimentos_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/configuracoes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        get: operations["api_configuracoes_list"];
        put?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        post: operations["api_configuracoes_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/configuracoes/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        get: operations["api_configuracoes_retrieve"];
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        put: operations["api_configuracoes_update"];
        post?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        delete: operations["api_configuracoes_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        patch: operations["api_configuracoes_partial_update"];
        trace?: never;
    };
    "/api/configuracoes/interjornada/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna configuração da interjornada mínima */
        get: operations["api_configuracoes_interjornada_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/configuracoes/periodo_noturno/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna configuração do período noturno */
        get: operations["api_configuracoes_periodo_noturno_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contratos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        get: operations["api_contratos_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        post: operations["api_contratos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contratos/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        get: operations["api_contratos_retrieve"];
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        put: operations["api_contratos_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        delete: operations["api_contratos_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        patch: operations["api_contratos_partial_update"];
        trace?: never;
    };
    "/api/contratos/{id}/validar_conformidade/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Valida conformidade do contrato com a legislação trabalhista */
        get: operations["api_contratos_validar_conformidade_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contratos/vigentes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna apenas contratos vigentes */
        get: operations["api_contratos_vigentes_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        get: operations["api_escalas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        post: operations["api_escalas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas-predefinidas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        get: operations["api_escalas_predefinidas_list"];
        put?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        post: operations["api_escalas_predefinidas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas-predefinidas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        get: operations["api_escalas_predefinidas_retrieve"];
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        put: operations["api_escalas_predefinidas_update"];
        post?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        delete: operations["api_escalas_predefinidas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        patch: operations["api_escalas_predefinidas_partial_update"];
        trace?: never;
    };
    "/api/escalas-predefinidas/disponiveis/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna todas as escalas disponíveis com análise de legalidade */
        get: operations["api_escalas_predefinidas_disponiveis_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        get: operations["api_escalas_retrieve"];
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        put: operations["api_escalas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        delete: operations["api_escalas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        patch: operations["api_escalas_partial_update"];
        trace?: never;
    };
    "/api/escalas/aplicar_escala_predefinida/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Aplica uma escala predefinida para um funcionário em um período */
        post: operations["api_escalas_aplicar_escala_predefinida_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas/periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna escalas de um período específico */
        get: operations["api_escalas_periodo_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/escalas/validar_periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Valida escalas de um período conforme regras trabalhistas */
        post: operations["api_escalas_validar_periodo_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/folgas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        get: operations["api_folgas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        post: operations["api_folgas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/folgas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        get: operations["api_folgas_retrieve"];
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        put: operations["api_folgas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        delete: operations["api_folgas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        patch: operations["api_folgas_partial_update"];
        trace?: never;
    };
    "/api/funcionarios/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        get: operations["api_funcionarios_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        post: operations["api_funcionarios_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/funcionarios/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        get: operations["api_funcionarios_retrieve"];
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        put: operations["api_funcionarios_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        delete: operations["api_funcionarios_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        patch: operations["api_funcionarios_partial_update"];
        trace?: never;
    };
    "/api/funcionarios/{id}/compensar_horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Compensa horas do banco de horas */
        post: operations["api_funcionarios_compensar_horas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/funcionarios/{id}/escalas_mes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna escalas do funcionário para o mês atual ou especificado */
        get: operations["api_funcionarios_escalas_mes_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/funcionarios/{id}/saldo_banco_horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna saldo atual do banco de horas do funcionário */
        get: operations["api_funcionarios_saldo_banco_horas_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/funcionarios/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna o funcionário associado ao usuário autenticado */
        get: operations["api_funcionarios_me_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pontos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        get: operations["api_pontos_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        post: operations["api_pontos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pontos/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        get: operations["api_pontos_retrieve"];
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        put: operations["api_pontos_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        delete: operations["api_pontos_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        patch: operations["api_pontos_partial_update"];
        trace?: never;
    };
    "/api/pontos/dia/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna pontos de um funcionário em uma data específica */
        get: operations["api_pontos_dia_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pontos/periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna pontos de um período específico */
        get: operations["api_pontos_periodo_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pontos/registrar/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Registra um novo ponto com validações automáticas */
        post: operations["api_pontos_registrar_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relatorios/dashboard/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna dados para dashboard do sistema */
        get: operations["api_relatorios_dashboard_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/relatorios/jornada_funcionario/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Gera relatório de jornada de um funcionário */
        post: operations["api_relatorios_jornada_funcionario_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/token/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * @description Takes a set of user credentials and returns an access and refresh JSON web
         *     token pair to prove the authentication of those credentials.
         */
        post: operations["api_token_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/token/refresh/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * @description Takes a refresh type JSON web token and returns an access type JSON web
         *     token if the refresh token is valid.
         */
        post: operations["api_token_refresh_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/banco-horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        get: operations["dashboard_api_banco_horas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        post: operations["dashboard_api_banco_horas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/banco-horas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        get: operations["dashboard_api_banco_horas_retrieve"];
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        put: operations["dashboard_api_banco_horas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        delete: operations["dashboard_api_banco_horas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento do banco de horas.
         *     Implementa controle de vencimentos e compensações.
         */
        patch: operations["dashboard_api_banco_horas_partial_update"];
        trace?: never;
    };
    "/dashboard/api/banco-horas/processar_vencimentos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Processa registros vencidos do banco de horas */
        post: operations["dashboard_api_banco_horas_processar_vencimentos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/banco-horas/saldos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna saldos de banco de horas de todos os funcionários */
        get: operations["dashboard_api_banco_horas_saldos_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/banco-horas/vencimentos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna registros próximos ao vencimento */
        get: operations["dashboard_api_banco_horas_vencimentos_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/configuracoes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        get: operations["dashboard_api_configuracoes_list"];
        put?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        post: operations["dashboard_api_configuracoes_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/configuracoes/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        get: operations["dashboard_api_configuracoes_retrieve"];
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        put: operations["dashboard_api_configuracoes_update"];
        post?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        delete: operations["dashboard_api_configuracoes_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para configurações do sistema.
         *     Permite ajustar parâmetros das regras trabalhistas.
         */
        patch: operations["dashboard_api_configuracoes_partial_update"];
        trace?: never;
    };
    "/dashboard/api/configuracoes/interjornada/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna configuração da interjornada mínima */
        get: operations["dashboard_api_configuracoes_interjornada_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/configuracoes/periodo_noturno/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna configuração do período noturno */
        get: operations["dashboard_api_configuracoes_periodo_noturno_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/contratos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        get: operations["dashboard_api_contratos_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        post: operations["dashboard_api_contratos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/contratos/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        get: operations["dashboard_api_contratos_retrieve"];
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        put: operations["dashboard_api_contratos_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        delete: operations["dashboard_api_contratos_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de contratos de trabalho.
         *     Implementa validações trabalhistas brasileiras.
         */
        patch: operations["dashboard_api_contratos_partial_update"];
        trace?: never;
    };
    "/dashboard/api/contratos/{id}/validar_conformidade/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Valida conformidade do contrato com a legislação trabalhista */
        get: operations["dashboard_api_contratos_validar_conformidade_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/contratos/vigentes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna apenas contratos vigentes */
        get: operations["dashboard_api_contratos_vigentes_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        get: operations["dashboard_api_escalas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        post: operations["dashboard_api_escalas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas-predefinidas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        get: operations["dashboard_api_escalas_predefinidas_list"];
        put?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        post: operations["dashboard_api_escalas_predefinidas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas-predefinidas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        get: operations["dashboard_api_escalas_predefinidas_retrieve"];
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        put: operations["dashboard_api_escalas_predefinidas_update"];
        post?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        delete: operations["dashboard_api_escalas_predefinidas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para escalas predefinidas disponíveis no Brasil.
         *     Fornece modelos de escalas conforme legislação brasileira.
         */
        patch: operations["dashboard_api_escalas_predefinidas_partial_update"];
        trace?: never;
    };
    "/dashboard/api/escalas-predefinidas/disponiveis/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna todas as escalas disponíveis com análise de legalidade */
        get: operations["dashboard_api_escalas_predefinidas_disponiveis_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        get: operations["dashboard_api_escalas_retrieve"];
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        put: operations["dashboard_api_escalas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        delete: operations["dashboard_api_escalas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de escalas de trabalho.
         *     Implementa validações das regras trabalhistas brasileiras.
         */
        patch: operations["dashboard_api_escalas_partial_update"];
        trace?: never;
    };
    "/dashboard/api/escalas/aplicar_escala_predefinida/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Aplica uma escala predefinida para um funcionário em um período */
        post: operations["dashboard_api_escalas_aplicar_escala_predefinida_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas/periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna escalas de um período específico */
        get: operations["dashboard_api_escalas_periodo_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/escalas/validar_periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Valida escalas de um período conforme regras trabalhistas */
        post: operations["dashboard_api_escalas_validar_periodo_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/folgas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        get: operations["dashboard_api_folgas_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        post: operations["dashboard_api_folgas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/folgas/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        get: operations["dashboard_api_folgas_retrieve"];
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        put: operations["dashboard_api_folgas_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        delete: operations["dashboard_api_folgas_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de folgas (compatibilidade).
         *     Mantém compatibilidade com sistema anterior.
         */
        patch: operations["dashboard_api_folgas_partial_update"];
        trace?: never;
    };
    "/dashboard/api/funcionarios/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        get: operations["dashboard_api_funcionarios_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        post: operations["dashboard_api_funcionarios_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/funcionarios/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        get: operations["dashboard_api_funcionarios_retrieve"];
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        put: operations["dashboard_api_funcionarios_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        delete: operations["dashboard_api_funcionarios_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de funcionários.
         *     Fornece operações CRUD e consultas específicas.
         */
        patch: operations["dashboard_api_funcionarios_partial_update"];
        trace?: never;
    };
    "/dashboard/api/funcionarios/{id}/compensar_horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Compensa horas do banco de horas */
        post: operations["dashboard_api_funcionarios_compensar_horas_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/funcionarios/{id}/escalas_mes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna escalas do funcionário para o mês atual ou especificado */
        get: operations["dashboard_api_funcionarios_escalas_mes_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/funcionarios/{id}/saldo_banco_horas/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna saldo atual do banco de horas do funcionário */
        get: operations["dashboard_api_funcionarios_saldo_banco_horas_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/funcionarios/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna o funcionário associado ao usuário autenticado */
        get: operations["dashboard_api_funcionarios_me_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/pontos/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        get: operations["dashboard_api_pontos_list"];
        put?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        post: operations["dashboard_api_pontos_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/pontos/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        get: operations["dashboard_api_pontos_retrieve"];
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        put: operations["dashboard_api_pontos_update"];
        post?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        delete: operations["dashboard_api_pontos_destroy"];
        options?: never;
        head?: never;
        /**
         * @description ViewSet para gerenciamento de registros de ponto.
         *     Implementa validações automáticas e integração com escalas.
         */
        patch: operations["dashboard_api_pontos_partial_update"];
        trace?: never;
    };
    "/dashboard/api/pontos/dia/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna pontos de um funcionário em uma data específica */
        get: operations["dashboard_api_pontos_dia_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/pontos/periodo/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna pontos de um período específico */
        get: operations["dashboard_api_pontos_periodo_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/pontos/registrar/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Registra um novo ponto com validações automáticas */
        post: operations["dashboard_api_pontos_registrar_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/relatorios/dashboard/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retorna dados para dashboard do sistema */
        get: operations["dashboard_api_relatorios_dashboard_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/relatorios/jornada_funcionario/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Gera relatório de jornada de um funcionário */
        post: operations["dashboard_api_relatorios_jornada_funcionario_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/token/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * @description Takes a set of user credentials and returns an access and refresh JSON web
         *     token pair to prove the authentication of those credentials.
         */
        post: operations["dashboard_api_token_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboard/api/token/refresh/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * @description Takes a refresh type JSON web token and returns an access type JSON web
         *     token if the refresh token is valid.
         */
        post: operations["dashboard_api_token_refresh_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Serializer para o modelo BancoHoras */
        BancoHoras: {
            readonly id: number;
            /** Funcionário */
            funcionario: number;
            readonly funcionario_nome: string;
            /**
             * Data de referência
             * Format: date
             */
            data_referencia: string;
            /**
             * Crédito (minutos)
             * Format: int64
             */
            credito_minutos?: number;
            /**
             * Débito (minutos)
             * Format: int64
             */
            debito_minutos?: number;
            /**
             * Saldo (minutos)
             * Format: int64
             */
            readonly saldo_minutos: number;
            /**
             * Data de vencimento
             * Format: date
             */
            readonly data_vencimento: string | null;
            compensado?: boolean;
            readonly vencido: string;
            /** Observações */
            observacoes?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        /** @description Serializer para configurações do sistema */
        ConfiguracaoSistema: {
            readonly id: number;
            chave: string;
            valor: string;
            /** Descrição */
            descricao?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        /** @description Serializer para o modelo Contrato com validações trabalhistas */
        Contrato: {
            readonly id: number;
            /** Funcionário */
            funcionario: number;
            readonly funcionario_nome: string;
            /**
             * Carga diária máxima (minutos)
             * Format: int64
             */
            carga_diaria_max?: number;
            /**
             * Carga semanal máxima (minutos)
             * Format: int64
             */
            carga_semanal_max?: number;
            /**
             * Limite diário de horas extras (minutos)
             * Format: int64
             */
            extra_diaria_cap?: number;
            /**
             * Prazo banco de horas (meses)
             * Format: int64
             */
            banco_horas_prazo_meses?: number;
            /** Permite escala 12x36 */
            permite_12x36?: boolean;
            /**
             * Vigência início
             * Format: date
             */
            vigencia_inicio: string;
            /**
             * Vigência fim
             * Format: date
             */
            vigencia_fim?: string | null;
            readonly vigente: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        /** @description Serializer customizado para incluir dados do usuário na resposta do token */
        CustomTokenObtainPair: {
            username: string;
            password: string;
        };
        /** @description Serializer para o modelo Escala com validações trabalhistas */
        Escala: {
            readonly id: number;
            /** Funcionário */
            funcionario: number;
            readonly funcionario_nome: string;
            /** Format: date */
            data: string;
            /**
             * Hora de início
             * Format: time
             */
            hora_inicio?: string | null;
            /**
             * Hora de término
             * Format: time
             */
            hora_fim?: string | null;
            /**
             * Pausa em minutos
             * Format: int64
             */
            pausa_minutos?: number;
            /** Tipo de escala */
            tipo_escala?: components["schemas"]["TipoEscalaEnum"];
            /** Dia de descanso (DSR) */
            descanso?: boolean;
            readonly duracao_minutos: string;
            readonly validacoes: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        /** @description Serializer para escalas predefinidas */
        EscalaPredefinida: {
            readonly id: number;
            /** Nome da escala */
            nome: string;
            /** Descrição */
            descricao?: string;
            /**
             * Horas de trabalho
             * Format: int64
             */
            horas_trabalho: number;
            /**
             * Horas de descanso
             * Format: int64
             */
            horas_descanso: number;
            readonly legal: string;
            readonly observacoes_legais: string;
        };
        /** @description Serializer para o modelo Folga (compatibilidade) */
        Folga: {
            readonly id: number;
            /** Funcionário */
            funcionario: number;
            readonly funcionario_nome: string;
            /**
             * Data da folga
             * Format: date
             */
            data: string;
            motivo?: string;
        };
        /** @description Serializer para o modelo Funcionario */
        Funcionario: {
            readonly id: number;
            /** Usuário */
            usuario?: number | null;
            /** Format: email */
            readonly usuario_email: string;
            readonly usuario_first_name: string;
            readonly usuario_last_name: string;
            nome: string;
            /** Matrícula */
            matricula: string;
            cargo: string;
            ativo?: boolean;
            readonly contrato_vigente: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        PaginatedBancoHorasList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["BancoHoras"][];
        };
        PaginatedConfiguracaoSistemaList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["ConfiguracaoSistema"][];
        };
        PaginatedContratoList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Contrato"][];
        };
        PaginatedEscalaList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Escala"][];
        };
        PaginatedEscalaPredefinidaList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["EscalaPredefinida"][];
        };
        PaginatedFolgaList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Folga"][];
        };
        PaginatedFuncionarioList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Funcionario"][];
        };
        PaginatedPontoList: {
            /** @example 123 */
            count?: number;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=4
             */
            next?: string | null;
            /**
             * Format: uri
             * @example http://api.example.org/accounts/?page=2
             */
            previous?: string | null;
            results?: components["schemas"]["Ponto"][];
        };
        /** @description Serializer para o modelo BancoHoras */
        PatchedBancoHoras: {
            readonly id?: number;
            /** Funcionário */
            funcionario?: number;
            readonly funcionario_nome?: string;
            /**
             * Data de referência
             * Format: date
             */
            data_referencia?: string;
            /**
             * Crédito (minutos)
             * Format: int64
             */
            credito_minutos?: number;
            /**
             * Débito (minutos)
             * Format: int64
             */
            debito_minutos?: number;
            /**
             * Saldo (minutos)
             * Format: int64
             */
            readonly saldo_minutos?: number;
            /**
             * Data de vencimento
             * Format: date
             */
            readonly data_vencimento?: string | null;
            compensado?: boolean;
            readonly vencido?: string;
            /** Observações */
            observacoes?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para configurações do sistema */
        PatchedConfiguracaoSistema: {
            readonly id?: number;
            chave?: string;
            valor?: string;
            /** Descrição */
            descricao?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para o modelo Contrato com validações trabalhistas */
        PatchedContrato: {
            readonly id?: number;
            /** Funcionário */
            funcionario?: number;
            readonly funcionario_nome?: string;
            /**
             * Carga diária máxima (minutos)
             * Format: int64
             */
            carga_diaria_max?: number;
            /**
             * Carga semanal máxima (minutos)
             * Format: int64
             */
            carga_semanal_max?: number;
            /**
             * Limite diário de horas extras (minutos)
             * Format: int64
             */
            extra_diaria_cap?: number;
            /**
             * Prazo banco de horas (meses)
             * Format: int64
             */
            banco_horas_prazo_meses?: number;
            /** Permite escala 12x36 */
            permite_12x36?: boolean;
            /**
             * Vigência início
             * Format: date
             */
            vigencia_inicio?: string;
            /**
             * Vigência fim
             * Format: date
             */
            vigencia_fim?: string | null;
            readonly vigente?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para o modelo Escala com validações trabalhistas */
        PatchedEscala: {
            readonly id?: number;
            /** Funcionário */
            funcionario?: number;
            readonly funcionario_nome?: string;
            /** Format: date */
            data?: string;
            /**
             * Hora de início
             * Format: time
             */
            hora_inicio?: string | null;
            /**
             * Hora de término
             * Format: time
             */
            hora_fim?: string | null;
            /**
             * Pausa em minutos
             * Format: int64
             */
            pausa_minutos?: number;
            /** Tipo de escala */
            tipo_escala?: components["schemas"]["TipoEscalaEnum"];
            /** Dia de descanso (DSR) */
            descanso?: boolean;
            readonly duracao_minutos?: string;
            readonly validacoes?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para escalas predefinidas */
        PatchedEscalaPredefinida: {
            readonly id?: number;
            /** Nome da escala */
            nome?: string;
            /** Descrição */
            descricao?: string;
            /**
             * Horas de trabalho
             * Format: int64
             */
            horas_trabalho?: number;
            /**
             * Horas de descanso
             * Format: int64
             */
            horas_descanso?: number;
            readonly legal?: string;
            readonly observacoes_legais?: string;
        };
        /** @description Serializer para o modelo Folga (compatibilidade) */
        PatchedFolga: {
            readonly id?: number;
            /** Funcionário */
            funcionario?: number;
            readonly funcionario_nome?: string;
            /**
             * Data da folga
             * Format: date
             */
            data?: string;
            motivo?: string;
        };
        /** @description Serializer para o modelo Funcionario */
        PatchedFuncionario: {
            readonly id?: number;
            /** Usuário */
            usuario?: number | null;
            /** Format: email */
            readonly usuario_email?: string;
            readonly usuario_first_name?: string;
            readonly usuario_last_name?: string;
            nome?: string;
            /** Matrícula */
            matricula?: string;
            cargo?: string;
            ativo?: boolean;
            readonly contrato_vigente?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para o modelo Ponto com validações automáticas */
        PatchedPonto: {
            readonly id?: number;
            /** Funcionário */
            funcionario?: number;
            readonly funcionario_nome?: string;
            readonly escala?: number | null;
            /** Format: date */
            readonly escala_data?: string;
            /**
             * Data e hora
             * Format: date-time
             */
            timestamp?: string;
            /** Tipo de registro */
            tipo_registro?: components["schemas"]["TipoRegistroEnum"];
            /**
             * Latitude
             * Format: double
             */
            localizacao_lat?: number | null;
            /**
             * Longitude
             * Format: double
             */
            localizacao_lng?: number | null;
            readonly validado?: boolean;
            /** Observações */
            observacoes?: string;
            readonly validacoes?: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at?: string;
        };
        /** @description Serializer para o modelo Ponto com validações automáticas */
        Ponto: {
            readonly id: number;
            /** Funcionário */
            funcionario: number;
            readonly funcionario_nome: string;
            readonly escala: number | null;
            /** Format: date */
            readonly escala_data: string;
            /**
             * Data e hora
             * Format: date-time
             */
            timestamp: string;
            /** Tipo de registro */
            tipo_registro: components["schemas"]["TipoRegistroEnum"];
            /**
             * Latitude
             * Format: double
             */
            localizacao_lat?: number | null;
            /**
             * Longitude
             * Format: double
             */
            localizacao_lng?: number | null;
            readonly validado: boolean;
            /** Observações */
            observacoes?: string;
            readonly validacoes: string;
            /**
             * Criado em
             * Format: date-time
             */
            readonly created_at: string;
        };
        /**
         * @description * `normal` - Normal
         *     * `12x36` - 12x36
         *     * `noturna` - Noturna
         *     * `extra` - Hora Extra
         * @enum {string}
         */
        TipoEscalaEnum: "normal" | "12x36" | "noturna" | "extra";
        /**
         * @description * `entrada` - Entrada
         *     * `saida` - Saída
         *     * `pausa_inicio` - Início da Pausa
         *     * `pausa_fim` - Fim da Pausa
         * @enum {string}
         */
        TipoRegistroEnum: "entrada" | "saida" | "pausa_inicio" | "pausa_fim";
        TokenRefresh: {
            readonly access: string;
            refresh: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_banco_horas_list: {
        parameters: {
            query?: {
                compensado?: boolean;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedBancoHorasList"];
                };
            };
        };
    };
    api_banco_horas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_banco_horas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedBancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedBancoHoras"];
                "multipart/form-data": components["schemas"]["PatchedBancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_processar_vencimentos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_saldos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_banco_horas_vencimentos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    api_configuracoes_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedConfiguracaoSistemaList"];
                };
            };
        };
    };
    api_configuracoes_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["ConfiguracaoSistema"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_configuracoes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_configuracoes_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["ConfiguracaoSistema"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_configuracoes_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_configuracoes_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["PatchedConfiguracaoSistema"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_configuracoes_interjornada_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_configuracoes_periodo_noturno_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    api_contratos_list: {
        parameters: {
            query?: {
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                permite_12x36?: boolean;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedContratoList"];
                };
            };
        };
    };
    api_contratos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Contrato"];
                "application/x-www-form-urlencoded": components["schemas"]["Contrato"];
                "multipart/form-data": components["schemas"]["Contrato"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_contratos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_contratos_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Contrato"];
                "application/x-www-form-urlencoded": components["schemas"]["Contrato"];
                "multipart/form-data": components["schemas"]["Contrato"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_contratos_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_contratos_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedContrato"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedContrato"];
                "multipart/form-data": components["schemas"]["PatchedContrato"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_contratos_validar_conformidade_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_contratos_vigentes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    api_escalas_list: {
        parameters: {
            query?: {
                data?: string;
                descanso?: boolean;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
                /**
                 * @description * `normal` - Normal
                 *     * `12x36` - 12x36
                 *     * `noturna` - Noturna
                 *     * `extra` - Hora Extra
                 */
                tipo_escala?: "12x36" | "extra" | "normal" | "noturna";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedEscalaList"];
                };
            };
        };
    };
    api_escalas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_predefinidas_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedEscalaPredefinidaList"];
                };
            };
        };
    };
    api_escalas_predefinidas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["EscalaPredefinida"];
                "multipart/form-data": components["schemas"]["EscalaPredefinida"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    api_escalas_predefinidas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    api_escalas_predefinidas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["EscalaPredefinida"];
                "multipart/form-data": components["schemas"]["EscalaPredefinida"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    api_escalas_predefinidas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_escalas_predefinidas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedEscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedEscalaPredefinida"];
                "multipart/form-data": components["schemas"]["PatchedEscalaPredefinida"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    api_escalas_predefinidas_disponiveis_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    api_escalas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_escalas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedEscala"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedEscala"];
                "multipart/form-data": components["schemas"]["PatchedEscala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_aplicar_escala_predefinida_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_periodo_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_escalas_validar_periodo_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    api_folgas_list: {
        parameters: {
            query?: {
                data?: string;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedFolgaList"];
                };
            };
        };
    };
    api_folgas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Folga"];
                "application/x-www-form-urlencoded": components["schemas"]["Folga"];
                "multipart/form-data": components["schemas"]["Folga"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    api_folgas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    api_folgas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Folga"];
                "application/x-www-form-urlencoded": components["schemas"]["Folga"];
                "multipart/form-data": components["schemas"]["Folga"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    api_folgas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_folgas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFolga"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFolga"];
                "multipart/form-data": components["schemas"]["PatchedFolga"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    api_funcionarios_list: {
        parameters: {
            query?: {
                ativo?: boolean;
                cargo?: string;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedFuncionarioList"];
                };
            };
        };
    };
    api_funcionarios_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_funcionarios_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFuncionario"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFuncionario"];
                "multipart/form-data": components["schemas"]["PatchedFuncionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_compensar_horas_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_escalas_mes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_saldo_banco_horas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_funcionarios_me_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    api_pontos_list: {
        parameters: {
            query?: {
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
                /**
                 * @description * `entrada` - Entrada
                 *     * `saida` - Saída
                 *     * `pausa_inicio` - Início da Pausa
                 *     * `pausa_fim` - Fim da Pausa
                 */
                tipo_registro?: "entrada" | "pausa_fim" | "pausa_inicio" | "saida";
                validado?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedPontoList"];
                };
            };
        };
    };
    api_pontos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_pontos_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPonto"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPonto"];
                "multipart/form-data": components["schemas"]["PatchedPonto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_dia_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_periodo_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_pontos_registrar_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    api_relatorios_dashboard_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_relatorios_jornada_funcionario_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_token_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokenObtainPair"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomTokenObtainPair"];
                "multipart/form-data": components["schemas"]["CustomTokenObtainPair"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTokenObtainPair"];
                };
            };
        };
    };
    api_token_refresh_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenRefresh"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
                "multipart/form-data": components["schemas"]["TokenRefresh"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenRefresh"];
                };
            };
        };
    };
    dashboard_api_banco_horas_list: {
        parameters: {
            query?: {
                compensado?: boolean;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedBancoHorasList"];
                };
            };
        };
    };
    dashboard_api_banco_horas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_banco_horas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Banco de Horas. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedBancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedBancoHoras"];
                "multipart/form-data": components["schemas"]["PatchedBancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_processar_vencimentos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BancoHoras"];
                "application/x-www-form-urlencoded": components["schemas"]["BancoHoras"];
                "multipart/form-data": components["schemas"]["BancoHoras"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_saldos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_banco_horas_vencimentos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BancoHoras"];
                };
            };
        };
    };
    dashboard_api_configuracoes_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedConfiguracaoSistemaList"];
                };
            };
        };
    };
    dashboard_api_configuracoes_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["ConfiguracaoSistema"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_configuracoes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_configuracoes_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["ConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["ConfiguracaoSistema"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_configuracoes_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_configuracoes_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Configuração do Sistema. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedConfiguracaoSistema"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedConfiguracaoSistema"];
                "multipart/form-data": components["schemas"]["PatchedConfiguracaoSistema"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_configuracoes_interjornada_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_configuracoes_periodo_noturno_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConfiguracaoSistema"];
                };
            };
        };
    };
    dashboard_api_contratos_list: {
        parameters: {
            query?: {
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                permite_12x36?: boolean;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedContratoList"];
                };
            };
        };
    };
    dashboard_api_contratos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Contrato"];
                "application/x-www-form-urlencoded": components["schemas"]["Contrato"];
                "multipart/form-data": components["schemas"]["Contrato"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_contratos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_contratos_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Contrato"];
                "application/x-www-form-urlencoded": components["schemas"]["Contrato"];
                "multipart/form-data": components["schemas"]["Contrato"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_contratos_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_contratos_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedContrato"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedContrato"];
                "multipart/form-data": components["schemas"]["PatchedContrato"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_contratos_validar_conformidade_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Contrato. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_contratos_vigentes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Contrato"];
                };
            };
        };
    };
    dashboard_api_escalas_list: {
        parameters: {
            query?: {
                data?: string;
                descanso?: boolean;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
                /**
                 * @description * `normal` - Normal
                 *     * `12x36` - 12x36
                 *     * `noturna` - Noturna
                 *     * `extra` - Hora Extra
                 */
                tipo_escala?: "12x36" | "extra" | "normal" | "noturna";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedEscalaList"];
                };
            };
        };
    };
    dashboard_api_escalas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_list: {
        parameters: {
            query?: {
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedEscalaPredefinidaList"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["EscalaPredefinida"];
                "multipart/form-data": components["schemas"]["EscalaPredefinida"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["EscalaPredefinida"];
                "multipart/form-data": components["schemas"]["EscalaPredefinida"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_escalas_predefinidas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala Predefinida. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedEscalaPredefinida"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedEscalaPredefinida"];
                "multipart/form-data": components["schemas"]["PatchedEscalaPredefinida"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    dashboard_api_escalas_predefinidas_disponiveis_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscalaPredefinida"];
                };
            };
        };
    };
    dashboard_api_escalas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_escalas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Escala. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedEscala"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedEscala"];
                "multipart/form-data": components["schemas"]["PatchedEscala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_aplicar_escala_predefinida_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_periodo_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_escalas_validar_periodo_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Escala"];
                "application/x-www-form-urlencoded": components["schemas"]["Escala"];
                "multipart/form-data": components["schemas"]["Escala"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Escala"];
                };
            };
        };
    };
    dashboard_api_folgas_list: {
        parameters: {
            query?: {
                data?: string;
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedFolgaList"];
                };
            };
        };
    };
    dashboard_api_folgas_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Folga"];
                "application/x-www-form-urlencoded": components["schemas"]["Folga"];
                "multipart/form-data": components["schemas"]["Folga"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    dashboard_api_folgas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    dashboard_api_folgas_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Folga"];
                "application/x-www-form-urlencoded": components["schemas"]["Folga"];
                "multipart/form-data": components["schemas"]["Folga"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    dashboard_api_folgas_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_folgas_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Folga. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFolga"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFolga"];
                "multipart/form-data": components["schemas"]["PatchedFolga"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Folga"];
                };
            };
        };
    };
    dashboard_api_funcionarios_list: {
        parameters: {
            query?: {
                ativo?: boolean;
                cargo?: string;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedFuncionarioList"];
                };
            };
        };
    };
    dashboard_api_funcionarios_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_funcionarios_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFuncionario"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFuncionario"];
                "multipart/form-data": components["schemas"]["PatchedFuncionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_compensar_horas_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Funcionario"];
                "application/x-www-form-urlencoded": components["schemas"]["Funcionario"];
                "multipart/form-data": components["schemas"]["Funcionario"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_escalas_mes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_saldo_banco_horas_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Funcionário. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_funcionarios_me_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Funcionario"];
                };
            };
        };
    };
    dashboard_api_pontos_list: {
        parameters: {
            query?: {
                funcionario?: number;
                /** @description Which field to use when ordering the results. */
                ordering?: string;
                /** @description A page number within the paginated result set. */
                page?: number;
                /** @description A search term. */
                search?: string;
                /**
                 * @description * `entrada` - Entrada
                 *     * `saida` - Saída
                 *     * `pausa_inicio` - Início da Pausa
                 *     * `pausa_fim` - Fim da Pausa
                 */
                tipo_registro?: "entrada" | "pausa_fim" | "pausa_inicio" | "saida";
                validado?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedPontoList"];
                };
            };
        };
    };
    dashboard_api_pontos_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_pontos_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this Ponto. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPonto"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPonto"];
                "multipart/form-data": components["schemas"]["PatchedPonto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_dia_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_periodo_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_pontos_registrar_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Ponto"];
                "application/x-www-form-urlencoded": components["schemas"]["Ponto"];
                "multipart/form-data": components["schemas"]["Ponto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Ponto"];
                };
            };
        };
    };
    dashboard_api_relatorios_dashboard_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_relatorios_jornada_funcionario_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    dashboard_api_token_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokenObtainPair"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomTokenObtainPair"];
                "multipart/form-data": components["schemas"]["CustomTokenObtainPair"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTokenObtainPair"];
                };
            };
        };
    };
    dashboard_api_token_refresh_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenRefresh"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
                "multipart/form-data": components["schemas"]["TokenRefresh"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenRefresh"];
                };
            };
        };
    };
}
